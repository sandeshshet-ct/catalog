// Function to decode values from different bases
function decodeValue(base, value) {
    return parseInt(value, base);
}

// Function to calculate polynomial coefficients using Lagrange interpolation
function lagrangeInterpolation(points, x) {
    let total = 0;
    for (let i = 0; i < points.length; i++) {
        let product = points[i][1];
        for (let j = 0; j < points.length; j++) {
            if (i !== j) {
                product *= (x - points[j][0]) / (points[i][0] - points[j][0]);
            }
        }
        total += product;
    }
    return total;
}

// Function to process JSON input and calculate constant term c
function findConstantTerm(jsonInput) {
    const data = JSON.parse(jsonInput);
    const roots = [];

    // Extract and decode roots from JSON
    for (let key in data) {
        if (data.hasOwnProperty(key) && !isNaN(key)) { // Check if key is numeric
            const base = parseInt(data[key].base);
            const value = data[key].value;
            const x = parseInt(key);
            const y = decodeValue(base, value); // Decode y value
            roots.push([x, y]);
        }
    }

    // Calculate the constant term c (f(0)) of the polynomial
    const c = lagrangeInterpolation(roots, 0);
    return c;
}

// Test Case 1
const jsonInput1 = `{
    "keys": {
        "n": 4,
        "k": 3
    },
    "1": {
        "base": "10",
        "value": "4"
    },
    "2": {
        "base": "2",
        "value": "111"
    },
    "3": {
        "base": "10",
        "value": "12"
    },
    "6": {
        "base": "4",
        "value": "213"
    }
}`;

// Test Case 2
const jsonInput2 = `{
    "keys": {
        "n": 9,
        "k": 6
    },
    "1": {
        "base": "10",
        "value": "28735619723837"
    },
    "2": {
        "base": "16",
        "value": "1A228867F0CA"
    },
    "3": {
        "base": "12",
        "value": "32811A4AA0B7B"
    },
    "4": {
        "base": "11",
        "value": "917978721331A"
    },
    "5": {
        "base": "16",
        "value": "1A22886782E1"
    },
    "6": {
        "base": "10",
        "value": "28735619654702"
    },
    "7": {
        "base": "14",
        "value": "71AB5070CC4B"
    },
    "8": {
        "base": "9",
        "value": "122662581541670"
    },
    "9": {
        "base": "8",
        "value": "642121030037605"
    }
}`;

// Calculate and print the constant term c for each test case
console.log("Constant term c for Test Case 1:", findConstantTerm(jsonInput1));
console.log("Constant term c for Test Case 2:", findConstantTerm(jsonInput2));

## Output
#### Constant term c for Test Case 1: 2.9999999999999982
#### Constant term c for Test Case 2: 33198405829207.53

